/*
 * Generated by gdbus-codegen 2.36.3. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __RFOS_H__
#define __RFOS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for kmitl.ce.os.RFOS */

#define TYPE_RFOS (rfos_get_type ())
#define RFOS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_RFOS, RFOS))
#define IS_RFOS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_RFOS))
#define RFOS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_RFOS, RFOSIface))

struct _RFOS;
typedef struct _RFOS RFOS;
typedef struct _RFOSIface RFOSIface;

struct _RFOSIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get) (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_key,
    const gchar *arg_outpath);

  gboolean (*handle_put) (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_key,
    const gchar *arg_src);

  gboolean (*handle_remove) (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_key);

  gboolean (*handle_search) (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_key,
    const gchar *arg_outpath);

  gboolean (*handle_stat) (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_key);

};

GType rfos_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *rfos_interface_info (void);
guint rfos_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void rfos_complete_put (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    guint err);

void rfos_complete_get (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    guint err);

void rfos_complete_remove (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    guint err);

void rfos_complete_search (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    guint err);

void rfos_complete_stat (
    RFOS *object,
    GDBusMethodInvocation *invocation,
    guint size,
    gint64 atime,
    guint err);



/* D-Bus method calls: */
void rfos_call_put (
    RFOS *proxy,
    const gchar *arg_key,
    const gchar *arg_src,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean rfos_call_put_finish (
    RFOS *proxy,
    guint *out_err,
    GAsyncResult *res,
    GError **error);

gboolean rfos_call_put_sync (
    RFOS *proxy,
    const gchar *arg_key,
    const gchar *arg_src,
    guint *out_err,
    GCancellable *cancellable,
    GError **error);

void rfos_call_get (
    RFOS *proxy,
    const gchar *arg_key,
    const gchar *arg_outpath,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean rfos_call_get_finish (
    RFOS *proxy,
    guint *out_err,
    GAsyncResult *res,
    GError **error);

gboolean rfos_call_get_sync (
    RFOS *proxy,
    const gchar *arg_key,
    const gchar *arg_outpath,
    guint *out_err,
    GCancellable *cancellable,
    GError **error);

void rfos_call_remove (
    RFOS *proxy,
    const gchar *arg_key,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean rfos_call_remove_finish (
    RFOS *proxy,
    guint *out_err,
    GAsyncResult *res,
    GError **error);

gboolean rfos_call_remove_sync (
    RFOS *proxy,
    const gchar *arg_key,
    guint *out_err,
    GCancellable *cancellable,
    GError **error);

void rfos_call_search (
    RFOS *proxy,
    const gchar *arg_key,
    const gchar *arg_outpath,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean rfos_call_search_finish (
    RFOS *proxy,
    guint *out_err,
    GAsyncResult *res,
    GError **error);

gboolean rfos_call_search_sync (
    RFOS *proxy,
    const gchar *arg_key,
    const gchar *arg_outpath,
    guint *out_err,
    GCancellable *cancellable,
    GError **error);

void rfos_call_stat (
    RFOS *proxy,
    const gchar *arg_key,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean rfos_call_stat_finish (
    RFOS *proxy,
    guint *out_size,
    gint64 *out_atime,
    guint *out_err,
    GAsyncResult *res,
    GError **error);

gboolean rfos_call_stat_sync (
    RFOS *proxy,
    const gchar *arg_key,
    guint *out_size,
    gint64 *out_atime,
    guint *out_err,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_RFOS_PROXY (rfos_proxy_get_type ())
#define RFOS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_RFOS_PROXY, RFOSProxy))
#define RFOS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_RFOS_PROXY, RFOSProxyClass))
#define RFOS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_RFOS_PROXY, RFOSProxyClass))
#define IS_RFOS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_RFOS_PROXY))
#define IS_RFOS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_RFOS_PROXY))

typedef struct _RFOSProxy RFOSProxy;
typedef struct _RFOSProxyClass RFOSProxyClass;
typedef struct _RFOSProxyPrivate RFOSProxyPrivate;

struct _RFOSProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  RFOSProxyPrivate *priv;
};

struct _RFOSProxyClass
{
  GDBusProxyClass parent_class;
};

GType rfos_proxy_get_type (void) G_GNUC_CONST;

void rfos_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
RFOS *rfos_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
RFOS *rfos_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void rfos_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
RFOS *rfos_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
RFOS *rfos_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_RFOS_SKELETON (rfos_skeleton_get_type ())
#define RFOS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_RFOS_SKELETON, RFOSSkeleton))
#define RFOS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_RFOS_SKELETON, RFOSSkeletonClass))
#define RFOS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_RFOS_SKELETON, RFOSSkeletonClass))
#define IS_RFOS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_RFOS_SKELETON))
#define IS_RFOS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_RFOS_SKELETON))

typedef struct _RFOSSkeleton RFOSSkeleton;
typedef struct _RFOSSkeletonClass RFOSSkeletonClass;
typedef struct _RFOSSkeletonPrivate RFOSSkeletonPrivate;

struct _RFOSSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  RFOSSkeletonPrivate *priv;
};

struct _RFOSSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType rfos_skeleton_get_type (void) G_GNUC_CONST;

RFOS *rfos_skeleton_new (void);


G_END_DECLS

#endif /* __RFOS_H__ */
